.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_02-plot_plot-glyphs.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-plot_plot-glyphs.py:


.. _glyph_example:

Plotting Glyphs
~~~~~~~~~~~~~~~

Use vectors in a dataset to plot and orient glyphs/geometric objects.

.. code-block:: default


    # sphinx_gallery_thumbnail_number = 1
    import vtki
    from vtki import examples
    import numpy as np







Glyphying can be done via the :func:`vtki.DataSetFilters.glyph` filter


.. code-block:: default


    mesh = examples.download_carotid().threshold(145, scalars='scalars')

    # Make a geometric obhect to use as the glyph
    geom = vtki.Arrow() # This could be any dataset

    # Perform the glyph
    glyphs = mesh.glyph(orient='vectors', scale='scalars', factor=0.005, geom=geom)

    # plot using the plotting class
    p = vtki.Plotter()
    p.add_mesh(glyphs)
    # Set a cool camera position
    p.camera_position = [(84.58052237950857, 77.76332116787425, 27.208569926456548),
     (131.39486171068918, 99.871379394528, 20.082859824932008),
     (0.13483731007732908, 0.033663777790747404, 0.9902957385932576)]
    p.show()




.. image:: /examples/02-plot/images/sphx_glr_plot-glyphs_001.png
    :class: sphx-glr-single-img




Another approach is to load the vectors directly to the mesh object and then
access the :attr:`vtki.Common.arrows` property.


.. code-block:: default


    sphere = vtki.Sphere(radius=3.14)

    # make cool swirly pattern
    vectors = np.vstack((np.sin(sphere.points[:, 0]),
    np.cos(sphere.points[:, 1]),
    np.cos(sphere.points[:, 2]))).T

    # add and scale
    sphere.vectors = vectors*0.3

    # plot just the arrows
    sphere.arrows.plot()




.. image:: /examples/02-plot/images/sphx_glr_plot-glyphs_002.png
    :class: sphx-glr-single-img





.. code-block:: default


    # plot the arrows and the sphere
    p = vtki.Plotter()
    p.add_mesh(sphere.arrows, lighting=False, stitle='Vector Magnitude')
    p.add_mesh(sphere, color='grey', ambient=0.6, opacity=0.5, show_edges=False)
    p.show()



.. image:: /examples/02-plot/images/sphx_glr_plot-glyphs_003.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.313 seconds)


.. _sphx_glr_download_examples_02-plot_plot-glyphs.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot-glyphs.py <plot-glyphs.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot-glyphs.ipynb <plot-glyphs.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
